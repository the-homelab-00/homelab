---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    # - name: rook-ceph-cluster
    #   namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.15.1@sha256:c4e02d2c511847eebbda8e0e370b41c78e7b51247353de79340e06c3e95f11be
            env:
              TZ: Europe/London
              LIBVA_DRIVER_NAME: i965
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 50m
              limits:
                gpu.intel.com/i915: "1"
                memory: 4Gi
    defaultPodOptions:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["plex"]
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
        google.feature.node.kubernetes.io/coral: "true"
    service:
      app:
        controller: frigate
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
          webrtc:
            port: 8555
          go2rtc:
            port: 1984
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: frigate-config
        advancedMounts:
          frigate:
            app:
              - path: /config
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: false
      data:
        existingClaim: frigate-media
        advancedMounts:
          frigate:
            app:
              - path: /media/frigate
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 1Gi
        globalMounts:
          - path: /dev/shm
      # media:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /media
        # type: nfs
        # server: expanse.internal
        # path: /eros/Frigate
        # globalMounts:
        #   - path: /media
