# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: zurg
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: zurg-secret
    template:
      engineVersion: v2
      data:
        config.yml: |
            # Zurg configuration version
            zurg: v1
            token: {{ .REAL_DEBRID_TOKEN }}

            save_strm_files: false
            serve_strm_files: true
            # basic functionality
            host: "[::]" # do not change this if you are running it inside a docker container
            port: 80 # do not change this if you are running it inside a docker container
            concurrent_workers: 20
            check_for_changes_every_secs: 15

            # misc configs
            retain_folder_name_extension: false # if true, zurg won't modify the filenames from real-debrid
            retain_rd_torrent_name: false # if true, it will strictly follow RD API torrent name property w/c should make this more compatible with rdt-client

            use_download_cache: true # if true, during zurg initialization, it will fetch all downloads to unrestrict links faster
            enable_repair: true # BEWARE! THERE CAN ONLY BE 1 INSTANCE OF ZURG THAT SHOULD REPAIR YOUR TORRENTS
            on_library_update: sh plex_update.sh "$@"

            rar_action: extract


            # network configs
            network_buffer_size: 1048576 # 1 MiB
            # serve_from_rclone: true # serve file data from rclone, not from zurg (zurg will only provide rclone the link to download)
            #verify_download_link: true # if true, zurg will check if the link is truly streamable; only relevant if serve_from_rclone is set to true (as it already does this all the time if serve_from_rclone is false)
            force_ipv6: false # force connect to real-debrid ipv6 addresses
            cache_network_test_results: true
            rate_limit_sleep_secs: 6 # wait time after getting a 429 from Real-Debrid API
            realdebrid_timeout_secs: 60 # api timeout
            retries_until_failed: 5 # api failures until considered failed
            # preferred_hosts:
            #   - 51.download.real-debrid.cloud # hops: 7 latency: 15.332ms
            #   - 60.download.real-debrid.cloud # hops: 2 latency: 21.385ms
            #   - 61.download.real-debrid.cloud # hops: 7 latency: 22.685ms
            #   - 56.download.real-debrid.cloud # hops: 7 latency: 22.698ms
            #   - 55.download.real-debrid.cloud # hops: 7 latency: 28.946ms
            #   - 62.download.real-debrid.cloud # hops: 7 latency: 29.751ms
            #   - 56.download.real-debrid.com # hops: 14 latency: 33.623ms
            #   - 69.download.real-debrid.cloud # hops: 23 latency: 34.617ms
            #   - 67.download.real-debrid.cloud # hops: 7 latency: 35.771ms
            #   - 50.download.real-debrid.cloud # hops: 21 latency: 36.919ms
            #   - 55.download.real-debrid.com # hops: 14 latency: 37.567ms
            #   - 60.download.real-debrid.com # hops: 14 latency: 37.882ms
            #   - 54.download.real-debrid.com # hops: 2 latency: 40.691ms
            #   - rbx.download.real-debrid.com # hops: 16 latency: 43.587ms
            #   - 66.download.real-debrid.cloud # hops: 7 latency: 44.899ms
            #   - 69.download.real-debrid.com # hops: 14 latency: 46.642ms
            #   - 65.download.real-debrid.cloud # hops: 7 latency: 46.947ms

            # List of directory definitions and their filtering rules
            directories:
              shows-4k:
                group: media
                group_order: 10
                filters:
                  - and:
                    - has_episodes: true  # intelligent detection of episode files inside a torrent
                    - regex: /uhd|2160|\b4k\b/i

              shows:
                group: media
                group_order: 20
                filters:
                  - has_episodes: true  # intelligent detection of episode files inside a torrent

              movies-4k:
                group: media
                group_order: 30
                filters:
                  - regex: /uhd|2160|\b4k\b/i

              movies:
                group: media  # because anime, shows and movies are in the same group,
                group_order: 40 # and anime and shows has a lower group_order number than movies, all torrents that doesn't fall into the previous 2 will fall into movies
                filters:
                  - regex: /.*/ # you cannot leave a directory without filters because it will not have any torrents in it

  dataFrom:
    - extract:
        key: zurg
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: ghcr-token
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: "30m"
  target:
    name: ghcr-token
    template:
      engineVersion: v2
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |
          {
            "auths": {
              "ghcr.io": {
                "auth": "{{ .GHCR_TOKEN }}"
              }
            }
          }
  dataFrom:
    - extract:
        key: ghcr
